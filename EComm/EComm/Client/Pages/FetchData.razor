@page "/fetchdata"
@inject HttpClient Http
@inject NavigationManager Nav

<h1>Products</h1>

<p>This component demonstrates fetching products from the server.</p>

@if (products == null) {
    <p><em>Loading...</em></p>
}
else {
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th><a @onclick="SortByPrice">Unit Price</a></th>
                <th>Package</th>
                <th>Supplier</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in products) {
                <tr @onclick="@(() => EditProduct(product))">
                    <td>@product.ProductName</td>
                    <td>@product.FormattedPrice</td>
                    <td>@product.Package</td>
                    <td>@(product.Supplier?.CompanyName ?? "Unknown")</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private Product[]? products;

    protected override async Task OnInitializedAsync()
    {
      products = await Http.GetFromJsonAsync<Product[]>("api/product?includeSuppliers=true");
    }

    private void SortByPrice()
    {
      if (products != null) products = products.OrderByDescending(p => p.UnitPrice).ToArray();
    }

    private void EditProduct(Product p)
    {
      Nav.NavigateTo($"edit/{p.Id}");
    }
}


Selection Hover in the list of products

Hand down when finished
