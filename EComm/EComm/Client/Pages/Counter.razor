@page "/counter"
@inject IJSRuntime JS
@inject ILocalStorageService LocalStorage

<h1>Counter</h1>

<p>Current count: <span class="@BackgroundColor">@currentCount</span></p>

<p>
  <input type="number" @bind="@increment" @onkeypress="KeyHandler" @onkeypress:preventDefault />
</p>
<p>
  <input type="number" @bind="@increment" @onkeypress="KeyHandler" />
</p>

<button disabled="@(currentCount > 9)" class="btn btn-primary" @onclick="IncrementCount">Click me</button>
<p>&nbsp;</p>
<button class="btn btn-primary" @onclick="ShowAlert">Show Alert</button>

@code {
    private int currentCount = 0;
    private int increment = 1;

    protected override async Task OnInitializedAsync()
    {
        var localCount = await LocalStorage.GetItemAsStringAsync("LocalCount");
        int c;
        if (int.TryParse(localCount, out c)) {
            currentCount = c;
        }
    }

    private async Task IncrementCount(MouseEventArgs e)
    {
        if (e.CtrlKey) {
            currentCount -= increment;
        }
        else {
            currentCount += increment;
        }
        await LocalStorage.SetItemAsStringAsync("LocalCount", currentCount.ToString());
    }

    private void KeyHandler(KeyboardEventArgs e)
    {
        if (e.Key == "+") {
            increment += 1;
        }
        else if (e.Key == "-") {
            increment -= 1;
        }
    }

    private string BackgroundColor =>
      (currentCount % 2 == 0) ? "red-background" : "yellow-background";

    private async Task ShowAlert()
    {
        await JS.InvokeVoidAsync("showAlert");
    }
}


