@page "/edit/{id}"
@inject HttpClient Http

<h3>Edit Product</h3>
<AuthorizeView>
    <Authorized>
        <p>You are authorized as @context.User.Identity?.Name</p>
    </Authorized>
    <NotAuthorized>
        <p>You are not authorized</p>
    </NotAuthorized>
</AuthorizeView>

@if (CurrentProduct == null) {
  <p><em>Loading...</em></p>
}
else {
  <EditForm Model="@CurrentProduct" OnValidSubmit="SaveProduct">
    <DataAnnotationsValidator />
    <fieldset>
      <div class="row mb-2">
        <label class="col-2" for="ProductName">Name:</label>
        <InputText class="col-6" id="ProductName" @bind-Value="CurrentProduct.ProductName" />
      </div>
      <div class="row mb-2">
        <div class="col-5 offset-2">
          <ValidationMessage For="@(() => CurrentProduct.ProductName)" />
        </div>
      </div>
      <div class="row mb-2">
        <label class="col-2" for="UnitPrice">Unit Price:</label>
        <InputNumber class="col-6" id="UnitPrice" @bind-Value="CurrentProduct.UnitPrice" />
      </div>
      <div class="row mb-2">
        <div class="col-5 offset-2">
          <ValidationMessage For="@(() => CurrentProduct.UnitPrice)" />
        </div>
      </div>
      <div class="row mb-2">
        <label class="col-2" for="Package">Package:</label>
        <InputText class="col-6" id="Package" @bind-Value="CurrentProduct.Package" />
      </div>
      <div class="row mb-2">
        <div class="col-5 offset-2">
          <ValidationMessage For="@(() => CurrentProduct.Package)" />
        </div>
      </div>
      <div class="row mb-2">
        <label class="col-2" for="Package">Supplier:</label>
        <InputSelect class="col-6" id="Supplier" @bind-Value="CurrentProduct.SupplierId">
          @foreach (var supplier in Suppliers!) {
            <option value="@supplier.Id">@supplier.CompanyName</option>
          }
        </InputSelect>
      </div>
      <div class="row mb-2">
        <label class="col-2" for="IsDiscontinued">Inactive:</label>
        <InputCheckbox class="col-6" id="Inactive" @bind-Value="CurrentProduct.IsDiscontinued" />
      </div>
      <button class="btn btn-primary" type="submit">Save</button>
    </fieldset>
  </EditForm>
  <Alert @bind-Show="ShowAlert">
    <span class="oi oi-check mr-2" aria-hidden="true"></span>
    <strong>Product saved</strong>
  </Alert>
}

@code {
    [Parameter]
    public string? Id { get; set; }

    private bool ShowAlert { get; set; }

    private string? message { get; set; } = string.Empty;

    private Product? CurrentProduct { get; set; }
    private Supplier[]? Suppliers { get; set; }

    protected override async Task OnInitializedAsync()
    {
        CurrentProduct = await Http.GetFromJsonAsync<Product>($"api/product/{Id}");
        Suppliers = await Http.GetFromJsonAsync<Supplier[]>("api/supplier");
    }

    public async Task SaveProduct()
    {
      await Http.PutAsJsonAsync($"api/product/{Id}", CurrentProduct);
      ShowAlert = true;
    }
}

